user www-data;

worker_processes auto;

load_module /etc/nginx/modules/ngx_http_image_filter_module.so;

events {
  worker_connections 1024;
}

http {

  include mime.types;

  # Buffer size for POST submissions
  client_body_buffer_size 10K; # the amont of buffer that come from FORM - post request !max buffer = 10k!
  client_max_body_size 8m; #  don't accept any request more than 8 mbyte if overttake than return 413 "Request Entity too Large"

  # Buffer size for Headers
  client_header_buffer_size 1k; # max header acceptable by the server 

  # Max time to receive client headers/body
  # Importantly, in this case, the body time out does not refer to the time it takes to transmit the entire
  # request body, but rather the time between consecutive read operations.

  client_body_timeout 12; #maximum 12 millisecond of consecutive read operation for body
  client_header_timeout 12; #maximum 12 millisecond of consecutive read operation for header

  # Max time to keep a connection open for
  keepalive_timeout 15; #This is extremely useful when, say, a client is requesting a number of files and keeping a connection
                        # open reduces the time it takes to open another new connection, equally not wanting to leave connections

  # Max time for the client accept/receive a response
  send_timeout 10; # Meaning if a client does not receive any of their response data in this amount of time, doesn't have
                   # to be all of the response data, but none of it at all about sending the response altogether.

  # Skip buffering for static files
  sendfile on;

  # Optimise sendfile packets
  tcp_nopush on; # What is Tcp_nopush? tcp_nopush. tcp_nopush is opposite to tcp_nodelay . 
                 # Instead of pushing packages as fast as possible, it aims to optimise the amount of data sent simultaneously.

  server {

    listen 80;
    server_name 127.0.0.1;

    access_log /var/log/nginx/venom_access.log;
    root /usr/local/nginx/sites/images;


    # location ~\.php$ {
    #   # Pass php requests to the php-fpm service (fastcgi)
    #   include fastcgi.conf;
    #   fastcgi_pass unix:/run/php/php7.4-fpm.sock;
    # }

    # location = /Venom.jpg {
    #     image_filter rotate 180;
    # }

    location ~* \.(css|js|jpg|jpeg|png)$ {
        access_log off;
        add_header Cache-Control public;
        add_header Pragma public;
        add_header Vary Accept-Encoding;
        expires 1M;
    }


  }
}